@page
@model KTLT_QuanLyCuaHang.Pages.Update_Product.IndexModel

@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@using KTLT_QuanLyCuaHang.Entities
@using KTLT_QuanLyCuaHang.BusinessLogic_BLL
@using KTLT_QuanLyCuaHang.Constants
@{
    ViewData["Title"] = "Update Product";

    string userEmail = HttpContextAccessor.HttpContext.Session.GetString("userEmail");

    string infoTextError = string.Empty;
    string infoTextApproved = string.Empty;

    string productName = string.Empty, productCategory = string.Empty, manufacturer = string.Empty;
    DateTime mfgDate = DateTime.Now, expDate = DateTime.Now;
    int quantity = 1;
    float price = 0;

    string productId = Request.Query["prodId"];

    Product? matchedProduct = Product_BLL.SearchProductBasedOnID(productId);

    if(matchedProduct == null)
    {
        infoTextError = $"Product with Product ID {productId} does not exist. Make sure you input the correct Product ID";
    } else
    {
        productName = matchedProduct.Value.name;
        productCategory = matchedProduct.Value.category;
        manufacturer = matchedProduct.Value.manufacturer;
        mfgDate = matchedProduct.Value.mfgDate;
        expDate = matchedProduct.Value.expDate;
        quantity = matchedProduct.Value.quantity;
        price = matchedProduct.Value.price;


        if (Request.Method == "POST")
        {
            productName = Request.Form["productName"];
            productCategory = Request.Form["productCategory"];
            manufacturer = Request.Form["manufacturer"];
            mfgDate = DateTime.Parse(Request.Form["mfgDate"]);
            expDate = DateTime.Parse(Request.Form["expDate"]);
            quantity = int.Parse(Request.Form["quantity"]);
            price = float.Parse(Request.Form["price"]);

            Product updatedProduct = new Product();
            updatedProduct.id = productId;
            updatedProduct.name = productName;
            updatedProduct.category = productCategory;
            updatedProduct.manufacturer = manufacturer;
            updatedProduct.mfgDate = mfgDate;
            updatedProduct.expDate = expDate;
            updatedProduct.quantity = quantity;
            updatedProduct.price = price;

            string status = Product_BLL.UpdateProductBasedOnID(updatedProduct);

            if (status == ProcessStatusConstants.PRODUCT_EMPTY_PRODUCT_DATABASE)
            {
                infoTextError = ProcessStatusConstants.PRODUCT_EMPTY_PRODUCT_DATABASE;
            }

            if (status == ProcessStatusConstants.PRODUCT_FAIL_INPUTS_ALL_FIELDS_REQUIRED)
            {
                infoTextError = ProcessStatusConstants.PRODUCT_FAIL_INPUTS_ALL_FIELDS_REQUIRED;
            }

            if (status == ProcessStatusConstants.PRODUCT_FAIL_INPUTS_QUANTITY_NOT_ALLOW_BELOW_ZERO)
            {
                infoTextError = ProcessStatusConstants.PRODUCT_FAIL_INPUTS_QUANTITY_NOT_ALLOW_BELOW_ZERO;
            }

            if (status == ProcessStatusConstants.PRODUCT_FAIL_INPUTS_PRICE_NOT_ALLOW_BELOW_ZERO)
            {
                infoTextError = ProcessStatusConstants.PRODUCT_FAIL_INPUTS_PRICE_NOT_ALLOW_BELOW_ZERO;
            }

            if (status == ProcessStatusConstants.PRODUCT_FAIL_INPUTS_MFG_DATE_NOT_IN_FUTURE)
            {
                infoTextError = ProcessStatusConstants.PRODUCT_FAIL_INPUTS_MFG_DATE_NOT_IN_FUTURE;
            }

            if (status == ProcessStatusConstants.PRODUCT_FAIL_INPUTS_EXP_DATE_NOT_IN_PAST)
            {
                infoTextError = ProcessStatusConstants.PRODUCT_FAIL_INPUTS_EXP_DATE_NOT_IN_PAST;
            }

            if (status == ProcessStatusConstants.PRODUCT_UPDATING_FAIL)
            {
                infoTextError = ProcessStatusConstants.PRODUCT_UPDATING_FAIL;
            }

            if (status == ProcessStatusConstants.PRODUCT_UPDATING_SUCCESS)
            {
                infoTextApproved = ProcessStatusConstants.PRODUCT_UPDATING_SUCCESS;
                Response.Redirect("/");
            }
        }
    }

    
}

<div class="bodyFrame">
    @if (string.IsNullOrEmpty(userEmail))
    {
        <div style="display:flex; align-items: center; justify-content: center; height: 400px">
            <h2>Login to use this app</h2>
        </div>
    } else {
        <div class="page-header">
            <h2>UPDATE PRODUCT</h2>
        </div>
        <form class="input-form" method="post">
            <div class="inputField">
                <label for="productId">Product ID</label>
                <input type="text" style="color: darkgrey" name="productId" value="@productId" disabled/>
            </div>

            <div class="inputField">
                <label for="productName">Product Name</label>
                <input type="text" name="productName" value="@productName"/>
            </div>

            <div class="inputField">
                <label for="productCategory">Product Category</label>
                <input type="text" name="productCategory" value="@productCategory"/>
            </div>

            <div class="inputField">
                <label for="manufacturer">Manufacturer</label>
                <input type="text" name="manufacturer" value="@manufacturer"/>
            </div>

            <div class="inputField">
                <label for="mfgDate">Manufacturering Date</label>
                <input type="text" name="mfgDate" placeholder="format: mm-dd-yyyy" value="@mfgDate.ToShortDateString()" />
            </div>

            <div class="inputField">
                <label for="expDate">Expiration Date</label>
                <input type="text" name="expDate" placeholder="format: mm-dd-yyyy" value="@expDate.ToShortDateString()" />
            </div>

            <div class="inputField">
                <label for="quantity">Quantity</label>
                <input type="number" name="quantity" value="@quantity"/>
            </div>

            <div class="inputField">
                <label for="price">Price</label>
                <input type="text" name="price" value="@price"/>
            </div>

            @if (!string.IsNullOrEmpty(infoTextError))
            {
                <p class="info-text-error">@infoTextError</p>
            }
       
            @if (!string.IsNullOrEmpty(infoTextApproved))
            {
                <p class="info-text-approved">@infoTextApproved</p>
            }

            <input class="submit-button" type="submit" value="Confirm and Update Product">
        </form>                                 
    }
</div>

@section Styling{
    <style>
        .bodyFrame {
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
            height: 82vh;
        }

        .page-header{
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .info-text-error {
            background-color: red;
            color: white;
        }

        .info-text-approved {
            background-color: forestgreen;
            color: white;
        }

        .input-form {
            width: 55%;
            display: flex;
            flex-direction: column;
            justify-content: space-evenly;
            align-items: center;
            height: 80%;
        }

        .inputField {
            width: 100%;
            display: flex;
            justify-content: space-between;
        }

            .inputField > input {
                width: 60%;
                padding-left: 1rem;
            }

        label {
            font-weight: bold;
        }

        input {
            border-radius: 8px;
        }

            input:focus {
                background-color: azure
            }

        .submit-button {
            width: 100%;
            color: white;
            background-color: deepskyblue;
            font-weight: bold;
            font-size: medium;
            height: 40px;
            margin-top: 30px;
        }

            .submit-button:hover {
                background-color: blue;
            }
    </style>
}

